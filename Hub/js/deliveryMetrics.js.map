{"version":3,"sources":["../src/deliveryMetrics.js"],"names":["Strat1","VSS","require","TFS_Wit_WebApi","getLeadTime","ShowChart","notifyLoadSucceeded","scatterChartData","datasets","forEach","dataset","backgroundColor","randomColor","pointBorderColor","pointBackgroundColor","pointBorderWidth","fill","showLine","Chart","defaults","global","responsive","ctx","document","getElementById","getContext","Scatter","data","options","title","display","text","legend","scales","xAxes","position","gridLines","zeroLineColor","scaleLabel","labelString","yAxes","randomScalingFactor","Math","random","round","opacity","label","x","y"],"mappings":"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","file":"deliveryMetrics.js","sourcesContent":["//VSS.notifyLoadSucceeded();\r\n\r\nfunction Strat1() {\r\nVSS.require([\"TFS/WorkItemTracking/RestClient\"],\r\n    function(TFS_Wit_WebApi) {\r\n        var getLeadTime = function() {\r\n            ShowChart();\r\n            // // Get a WIT client to make REST calls to VSTS\r\n            // client = TFS_Wit_WebApi.getClient();\r\n            // var projectId = VSS.getWebContext().project.id;\r\n            // var queryPath = \"settings.queryPath\";\r\n            // //Get a tfs query to get it's id\r\n            // return client.getQuery(projectId, queryPath).then(query => {\r\n            //     //Get query result\r\n            //     client.queryById(query.id).then(ResultQuery);\r\n            //     // ,\r\n            //     //     function(error) {\r\n            //     //         $('#error').text(\"There is an error in query \" + queryPath.substr(15) + \": \" + error.message);\r\n            //     //     });\r\n            // });\r\n        };\r\n        VSS.notifyLoadSucceeded();\r\n    }\r\n);\r\n}\r\n\r\n\r\n\r\nfunction ShowChart() {\r\n\r\n    scatterChartData.datasets.forEach(dataset => {\r\n        dataset.backgroundColor = randomColor(0.1);\r\n        dataset.pointBorderColor = randomColor(0.7);\r\n        dataset.pointBackgroundColor = randomColor(0.5);\r\n        dataset.pointBorderWidth = 1;\r\n        dataset.fill = false;\r\n        dataset.showLine = false;\r\n    });\r\n\r\n    //var canvas = $('#canvas');\r\n    // canvas.getContext(\"2d\");\r\n    Chart.defaults.global.responsive = false;\r\n    var ctx = document.getElementById(\"canvas\").getContext(\"2d\");\r\n    new Chart.Scatter(ctx, {\r\n        data: scatterChartData,\r\n        options: {\r\n            title: {\r\n                display: true,\r\n                text: 'Cycle Time'\r\n            },\r\n            legend: {\r\n                display: false //nÃ£o mostra a lengenda do dataset\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    position: 'bottom',\r\n                    gridLines: {\r\n                        zeroLineColor: \"rgba(0,255,0,1)\"\r\n                    },\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Date'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    position: 'left',\r\n                    gridLines: {\r\n                        zeroLineColor: \"rgba(0,255,0,1)\"\r\n                    },\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Days'\r\n                    }\r\n                }]\r\n            }\r\n        }\r\n    });\r\n};\r\n\r\n//window.onload = ShowChart();\r\nvar randomScalingFactor = function() {\r\n    return (Math.random() > 0.5 ? 1.0 : -1.0) * Math.round(Math.random() * 100);\r\n};\r\nvar randomColor = function(opacity) {\r\n    return 'rgba(' + Math.round(Math.random() * 255) + ',' + Math.round(Math.random() * 255) + ',' + Math.round(Math.random() * 255) + ',' + (opacity || '.3') + ')';\r\n};\r\n\r\nvar scatterChartData = {\r\n    datasets: [{\r\n        label: \"PBIs\",\r\n\r\n        data: [{\r\n            x: randomScalingFactor(),\r\n            y: randomScalingFactor(),\r\n        }, {\r\n            x: randomScalingFactor(),\r\n            y: randomScalingFactor(),\r\n        }, {\r\n            x: randomScalingFactor(),\r\n            y: randomScalingFactor(),\r\n        }, {\r\n            x: randomScalingFactor(),\r\n            y: randomScalingFactor(),\r\n        }, {\r\n            x: randomScalingFactor(),\r\n            y: randomScalingFactor(),\r\n        }, {\r\n            x: randomScalingFactor(),\r\n            y: randomScalingFactor(),\r\n        }, {\r\n            x: randomScalingFactor(),\r\n            y: randomScalingFactor(),\r\n        }]\r\n    }]\r\n\r\n};"]}